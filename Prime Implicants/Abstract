A common problem in computer science is simplifying boolean functions: given a boolean function in a certain form, such as Conjunctive Normal Form (C.N.F), the objective is to find the smallest equivalent expression, typically in Disjunctive Normal Form. Quine-McCluskey's algorithm does this by computing all prime implicants: an implicant of a boolean expression is a conjunct which implies the expression and it is prime implicant if no subset of this conjunct is an implicant of the expression. In other words, prime implicants are the ``minimal" conjuncts that imply the original expression. However, this algorithm is known to be computationally expensive as it takes exponential time, and this problem is generally np-hard. Additionally, the algorithm assumes some structure about the input, such as requiring all points where the expression is true to be given. Our goal in this paper is to design faster and parameterized algorithms to find all prime implicants of any given C.N.F expression. Additionally, we show some hardness results for certain parameterization.
